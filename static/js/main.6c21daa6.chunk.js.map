{"version":3,"sources":["AppBar/ChangeLanguage.js","AppBar/SocialLink.js","AppBar/index.js","HomePage/Body/index.js","HomePage/Cards/Card.js","HomePage/Cards/index.js","Footer/index.js","HomePage/index.js","store/index.js","theme/index.js","Translation/index.js","App.js","serviceWorker.js","index.js"],"names":["ChangeLanguage","i18n","useTranslation","new_language","language","useGlobal","oldlang","setLang","lang","i18next","newDirection","body","document","setAttribute","change_body","Button","color","onClick","changeLanguage","Typography","SocialLink","props","link","icon","IconButton","href","edge","useStyles","makeStyles","theme","root","flexGrow","title","TheAppBar","classes","t","className","AppBar","position","Toolbar","variant","minHeight","flex","flexDirection","marginBottom","marginTop","header","margin","content","listItem","marginLeft","textAlign","direction","bullet","fontSize","image","borderRadius","height","maxWidth","ShowFeatures","features","List","map","item","ListItem","key","ListItemIcon","size","ListItemText","primary","Body","Paper","elevation","Grid","container","spacing","xs","sm","src","process","alt","MainCard","Icon","subheader","actions","children","Card","CardHeader","avatar","CardContent","component","CardActions","codeParent","background","padding","code","Cards","i18nKey","Link","footer","backgroundColor","palette","type","grey","StickyFooter","Container","role","aria-label","display","Home","Global","rtlTheme","createMuiTheme","typography","fontFamily","ltrTheme","getAttribute","use","initReactI18next","init","resources","en","translation","en_dict","fa","fa_dict","lng","fallbackLng","interpolation","escapeValue","setGlobal","store","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c21daa6.chunk.js","sourcesContent":["// @flow\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport i18next from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport React, { useGlobal } from \"reactn\";\nfunction change_body(oldlang, setLang) {\n  const lang = i18next.language;\n  const newDirection = lang === \"fa\" ? \"rtl\" : \"ltr\";\n  if (lang !== oldlang) {\n    setLang(lang);\n  }\n  const body: ?HTMLElement = document.body;\n  body && body.setAttribute(\"dir\", newDirection);\n}\nexport function ChangeLanguage() {\n  const { i18n } = useTranslation();\n  const { language } = i18n;\n  const new_language: string = language === \"fa\" ? \"en\" : \"fa\";\n  const [lang, setLang] = useGlobal(\"language\");\n\n  change_body(lang, setLang);\n\n  return (\n    <Button color=\"inherit\" onClick={() => i18n.changeLanguage(new_language)}>\n      <Typography>EN/FA</Typography>\n    </Button>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport { Node } from \"react\";\nexport function SocialLink(props: SLinkProps) {\n  const { link, icon } = props;\n  return (\n    <IconButton href={link} edge=\"start\" color=\"inherit\">\n      {icon}\n    </IconButton>\n  );\n}\ntype SLinkProps = {\n  icon: Node,\n  link: string,\n};\n","// @flow\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/ToolBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChartIcons from \"@material-ui/icons/ShowChartOutlined\";\nimport GithubIcon from \"@material-ui/icons/GitHub\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChangeLanguage } from \"./ChangeLanguage\";\nimport { SocialLink } from \"./SocialLink\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction TheAppBar() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <ChartIcons />\n          <Typography variant=\"h6\" className={classes.title}>\n            {t(\"title\")}\n          </Typography>\n          <SocialLink\n            link=\"https://github.com/ghodsizadeh/tehran-stocks\"\n            icon={<GithubIcon />}\n          />\n          <SocialLink\n            link=\"https://twitter.com/ghodsizadeh\"\n            icon={<TwitterIcon />}\n          />\n          <SocialLink\n            link=\"https://idpay.ir/ghodsizadeh\"\n            icon={<CardGiftcardIcon />}\n          />\n          <ChangeLanguage />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default TheAppBar;\n","// @flow\nimport React from \"react\";\nimport {\n  Paper,\n  makeStyles,\n  Theme,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Bullet from \"@material-ui/icons/FiberManualRecord\";\nimport { useTranslation } from \"react-i18next\";\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minHeight: \"300px\",\n    flex: 1,\n    flexDirection: \"column\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n  },\n  header: {\n    margin: \"8px\",\n    // width: \"55%\"\n  },\n  content: {\n    margin: \"10px\",\n    // width: \"60%\",\n  },\n  listItem: {\n    marginLeft: \"-30px\",\n    textAlign: theme.direction === \"rtl\" ? \"right\" : \"left\",\n  },\n  bullet: {\n    color: \"black\",\n    fontSize: \"14px\",\n  },\n  image: {\n    borderRadius: \"50px\",\n    // paddingLeft: \"30px\",\n    // paddingRight: \"40px\",\n    height: \"auto\",\n    maxWidth: \"90%\",\n  },\n}));\n\nfunction ShowFeatures() {\n  const { t } = useTranslation();\n  const features: Array<string> = [\n    t(\"b_fast\"),\n    t(\"b_real\"),\n    t(\"b_pandas_ready\"),\n    t(\"b_exportable\"),\n  ];\n  const classes = useStyles();\n  return (\n    <List>\n      {features.map((item) => (\n        <ListItem key={item}>\n          <ListItemIcon>\n            <Bullet className={classes.bullet} size={10} />\n          </ListItemIcon>\n          <ListItemText className={classes.listItem} primary={t(item)} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\nexport default function Body() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper elevation={5} className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={7}>\n          <Typography className={classes.header} variant=\"h2\" color=\"primary\">\n            {t(\"header\")}\n          </Typography>\n          <Typography className={classes.content}>\n            {t(\"bodyContent\")}\n          </Typography>\n          <ShowFeatures />\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <img\n            className={classes.image}\n            //$FlowFixMe\n            src={process.env.PUBLIC_URL + \"/stock.jpg\"}\n            alt=\"stock\"\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","// @flow\nimport { Card, Typography } from \"@material-ui/core\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport React from \"react\";\nimport type { Node } from \"react\";\n\ntype Props = {\n  Icon: Node,\n  title: string,\n  subheader?: string,\n  content: string,\n  actions: string,\n  children: Node,\n};\n\nexport default function MainCard(props: Props) {\n  const { Icon, title, subheader, content, actions, children } = props;\n  return (\n    <Card>\n      <CardHeader\n        avatar={Icon}\n        title={title}\n        subheader={subheader}\n      ></CardHeader>\n\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {content}\n        </Typography>\n        {children}\n      </CardContent>\n      <CardActions>\n        {actions}\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Grid, Typography, Link, makeStyles } from \"@material-ui/core\";\nimport MainCard from \"./Card\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport DonateIcon from \"@material-ui/icons/FreeBreakfastRounded\";\nimport RunIcon from \"@material-ui/icons/DirectionsRunRounded\";\nconst useStyles = makeStyles((theme) => ({\n  codeParent: {\n    textAlign: \"left\",\n    direction: \"ltr\",\n    borderRadius: \"10px\",\n    background: \"black\",\n    padding: \"7px\",\n  },\n  code: { color: \"white\" },\n}));\nexport default function Cards() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={4}>\n          <MainCard\n            Icon={<HelpIcon />}\n            title={t(\"titleStart\")}\n            subheader={t(\"subheaderStart\")}\n            content={t(\"contentStart\")}\n          >\n            <Trans i18nKey=\"virgol\">\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Hello\n                <Link href=\"https://virgool.io/@ghodsizadeh/%D8%A8%D9%88%D8%B1%D8%B3-%D8%AA%D9%87%D8%B1%D8%A7%D9%86-%D8%AF%D8%B1-%D9%BE%D8%A7%DB%8C%D8%AA%D9%88%D9%86-c01c6loigi4z\">\n                  site\n                </Link>\n                follow\n              </Typography>\n            </Trans>\n            <Trans i18nKey=\"github\">\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                pregit\n                <Link href=\"https://github.com/ghodsizadeh/tehran-stocks\">\n                  gitsite\n                </Link>\n                postgit\n              </Typography>\n            </Trans>\n          </MainCard>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <MainCard\n            Icon={<RunIcon />}\n            title={t(\"titleRun\")}\n            subheader={t(\"subheaderRun\")}\n            content={t(\"contentRun\")}\n          >\n            <div className={classes.codeParent}>\n              <code className={classes.code}>\n                $ pip install tehran_stocks\n                <br />\n                $ python\n                <br />\n                >>> import tehran_stocks\n              </code>\n            </div>\n          </MainCard>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <MainCard\n            Icon={<DonateIcon />}\n            title={t(\"titleCoffee\")}\n            subheader={t(\"subheaderCoffee\")}\n            content={t(\"contentCoffee\")}\n          >\n            <Trans i18nKey=\"coffeeShop\">\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                precoffe\n                <Link href=\"https://idpay.ir/ghodsizadeh\">coffelink</Link>\n                postcoffes\n              </Typography>\n            </Trans>\n          </MainCard>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    // textAlign: theme.direction === \"rtl\" ? \"right\" : \"left\",\n    textAlign: \"center\",\n    padding: theme.spacing(3, 2),\n\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"body1\">\n          ساخته شده با\n          <span role=\"img\" aria-label=\"heart\" color=\"red\">\n            ❤️\n          </span>\n          توسط\n          <Link href=\"https://twitter.com/ghodsizadeh\"> مهدی قدسی‌زاده </Link>\n        </Typography>\n      </Container>\n    </footer>\n  );\n}\n","// @flow\nimport AppBar from \"AppBar\";\nimport React from \"react\";\nimport Body from \"./Body\";\nimport Cards from \"./Cards\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport Footer from \"Footer\";\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"15px\",\n  },\n}));\n\nfunction Home() {\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar />\n      <div className={classes.root}>\n        <Body />\n        <Cards />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","const Global = {\n  language: \"fa\",\n};\n\nexport default Global;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const rtlTheme = createMuiTheme({\n  direction: \"rtl\",\n  typography: { fontFamily: \"Vazir\" },\n});\nexport const ltrTheme = createMuiTheme({\n  direction: \"ltr\",\n});\n\nexport const bodyDir = document.body.getAttribute(\"dir\");\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en_dict from \"./en/resource\";\nimport fa_dict from \"./fa/resource\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: {\n        translation: en_dict,\n      },\n      fa: {\n        translation: fa_dict,\n      },\n    },\n    lng: \"fa\",\n    fallbackLng: [\"en\", \"fa\"],\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\nexport default i18n;\n","// @flow\nimport { Theme, ThemeProvider } from \"@material-ui/core\";\nimport Home from \"HomePage\";\nimport React, { setGlobal, useGlobal } from \"reactn\";\nimport store from \"store\";\nimport { ltrTheme, rtlTheme } from \"theme\";\nimport \"Translation\";\nimport \"./App.css\";\n\nsetGlobal(store);\nfunction App() {\n  const [language] = useGlobal(\"language\");\n\n  const theme: Theme = language === \"en\" ? ltrTheme : rtlTheme;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Home />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}